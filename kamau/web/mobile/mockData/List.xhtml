<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.org/ui"
                xmlns:pm="http://primefaces.org/mobile">

    <pm:page id="MockDataListPage">
        <pm:header title="#{myBundle.ListMockDataTitle}">
            <h:form>
                <p:commandButton id="backButton"   styleClass="ui-btn-left  ui-btn-inline" icon="ui-icon-arrow-l" value="#{myBundle.Back}" action="#{mobilePageController.navigateBackInHistory('/mobile/index')}"/>
                <p:commandButton id="createButton" styleClass="ui-btn-right ui-btn-inline" icon="ui-icon-plus"    value="#{myBundle.Create}" update=":MockDataCreatePage:MockDataCreateForm" actionListener="#{mockDataController.prepareCreate}" action="#{mobilePageController.navigateWithHistory('pm:MockDataCreatePage')}">
                    <f:actionListener binding="#{currentPageListener}"/>
                </p:commandButton>
            </h:form>
        </pm:header>

        <pm:content>

            <h:form id="MockDataListForm">

                <p:dataTable id="datalist"
                             value="#{mockDataController.items}"
                             var="item"
                             rowKey="#{item.id}"
                             paginator="true"
                             rows="10"
                             rowsPerPageTemplate="10,20,30,40,50"
                             selectionMode="single"
                             selection="#{mockDataController.selected}"
                             reflow="true">

                    <p:ajax event="rowSelect"   update="@form:editButton,@form:deleteButton"/>
                    <p:ajax event="rowUnselect" update="@form:editButton,@form:deleteButton"/>
                    <p:ajax event="swipeleft"   oncomplete="document.getElementById('MockDataListPage:MockDataListForm:deleteButton').click();"/>
                    <p:ajax event="tap"         oncomplete="document.getElementById('MockDataListPage:MockDataListForm:editButton').click();"/>

                    <p:column sortBy="#{item.id}" filterBy="#{item.id}" headerText="#{myBundle.ListMockDataTitle_id}">
                        <h:outputText value="#{item.id}"/>
                    </p:column>


                    <p:column sortBy="#{item.firstName}" filterBy="#{item.firstName}" headerText="#{myBundle.ListMockDataTitle_firstName}">
                        <h:outputText value="#{item.firstName}"/>
                    </p:column>


                    <p:column sortBy="#{item.lastName}" filterBy="#{item.lastName}" headerText="#{myBundle.ListMockDataTitle_lastName}">
                        <h:outputText value="#{item.lastName}"/>
                    </p:column>


                    <p:column sortBy="#{item.email}" filterBy="#{item.email}" headerText="#{myBundle.ListMockDataTitle_email}">
                        <h:outputText value="#{item.email}"/>
                    </p:column>


                    <p:column sortBy="#{item.gender}" filterBy="#{item.gender}" headerText="#{myBundle.ListMockDataTitle_gender}">
                        <h:outputText value="#{item.gender}"/>
                    </p:column>


                    <p:column sortBy="#{item.ipAddress}" filterBy="#{item.ipAddress}" headerText="#{myBundle.ListMockDataTitle_ipAddress}">
                        <h:outputText value="#{item.ipAddress}"/>
                    </p:column>

                </p:dataTable>
                <p:commandButton id="editButton"   style="visibility: hidden;" icon="ui-icon-pencil" value="#{myBundle.Edit}" update=":MockDataEditPage:MockDataEditForm" disabled="#{empty mockDataController.selected}" actionListener="#{mobilePageController.currentPageListener}" action="#{mobilePageController.navigateWithHistory('pm:MockDataEditPage')}"/>
                <p:commandButton id="deleteButton" style="visibility: hidden;" icon="ui-icon-trash"  value="#{myBundle.Delete}" actionListener="#{mockDataController.delete}" update=":growl,datalist" disabled="#{empty mockDataController.selected}">
                    <p:confirm header="#{myBundle.ConfirmationHeader}" message="#{myBundle.ConfirmDeleteMessage}" icon="ui-icon-alert"/>
                </p:commandButton>
            </h:form>

        </pm:content>

    </pm:page>

</ui:composition>